########################## Kafka相关配置 Start ##########################################################################
# kafka servers kafka 集群
kafka.bootStrapServers=localhost:9092,localhost:9093
#*******************************consumer*******************************************************************************#
# 分组id  指定对应的消费组 同一个消费组的topic可以消费
# 基本是每个应用分配一个分组
kafka.consumer.consumerGroupId=jason-kafka
# 是否自动提交-指定是否自动提交偏移量-默认为true
# 再均衡re_balance:消费者需要读取每个partition最后一次提交的偏移量,然后从偏移量指定的地方继续处理
kafka.consumer.consumerEnableAutocommit=true
# 自动提交的频率(毫秒) - 100ms 提交一次偏移量(默认为5s) 自动提交的优点是方便，但是可能会重复处理消息
kafka.consumer.consumerAutoCommitIntervalMs=100
# Session超时设置(毫秒)
# 指定消费者被认定死亡之前可以与服务器断开连接的时间：默认是3s
kafka.consumer.consumerSessionTimeoutMs=15000
# 指定从最近地方开始消费(earliest latest )
kafka.consumer.consumerAutoOffsetReset=earliest
# 指定partition如何分配给消费者，默认是Range
# 1.Range：把Topic的若干个连续的partition分配给消费者
# 2.RoundRobin：把Topic的所有partition逐个分配给消费者
# partition.assignment.strategy
#*******************************producer*******************************************************************************#
######################producer######################
# 重试,0为不启用重试机制
kafka.producer.producerRetries=1
# 控制批处理大小,单位为字节
kafka.producer.producerBatchSize=16384
# 批量发送,延迟为1毫秒,启用该功能能有效减少生产者发送消息次数,从而提高并发量
kafka.producer.producerLingerMs=1
# 生产者可以使用的总内存字节来缓冲等待发送到服务器的记录
kafka.producer.producerBufferMemory=33554432
########################## Kafka相关配置 End ############################################################################